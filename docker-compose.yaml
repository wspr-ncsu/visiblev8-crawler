version: "3.9"
services:
  frontend:
    restart: unless-stopped
    image: vv8_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80/tcp"
  nginx:
    restart: unless-stopped
    image: nginx:1.21.6-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
    depends_on:
      - frontend
      - backend
  backend:
    restart: unless-stopped
    image: vv8_backend_api
    depends_on:
      - task_queue_broker
      - database
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000/tcp"
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_web_server
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
  database:
    restart: unless-stopped
    image: vv8_postgres
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - "5434:5432/tcp"
    environment:
      POSTGRES_PASSWORD: vv8
      POSTGRES_USER: vv8
      POSTGRES_DB: vv8_logs
      PGDATA: /var/lib/postgresql/data
    volumes:
      - vv8db:/var/lib/postgresql/data
  mongodb:
    restart: unless-stopped
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: vv8
      MONGO_INITDB_ROOT_PASSWORD: vv8
      MONGO_INITDB_DATABASE: db
    ports:
      - "27018:27017/tcp"
    volumes:
      - mongodb_data_container:/data/db
  database_sidecar:
    restart: unless-stopped
    image: vv8_db_sidecar
    depends_on:
      - database
    build:
      context: ./database_sidecar
      dockerfile: Dockerfile
    environment:
      VV8_DB_USERNAME: vv8
      VV8_DB_PASSWORD: vv8
      VV8_DB_HOST: database
      VV8_DB_PORT: 5432
      VV8_DB_NAME: vv8_logs
    ports:
      - "7777:80/tcp"
  task_queue_broker:
    restart: unless-stopped
    image: redis:6.2
    ports:
      - "6380:6379/tcp"

  # Celery Workers
  vv8_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database
    build:
      context: ./celery_workers
      dockerfile: vv8_worker.dockerfile
    image: vv8_crawler_worker
    deploy:
      replicas: 3
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_worker
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
      MONGO_USER: vv8
      MONGO_PASSWORD: vv8
      MONGO_HOST: localhost
      MONGO_PORT: 27018
    volumes:
      - ./screenshots:/app/screenshots:rw
      - ./har:/app/har:rw
  log_parser_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database
    build:
      context: ./celery_workers
      dockerfile: log_parser.dockerfile
    image: vv8_log_parser_worker
    deploy:
      replicas: 3
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_log_parser
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
      VV8_DB_SC_HOST: database_sidecar
      VV8_DB_SC_PORT: 80
      MONGO_USER: vv8
      MONGO_PASSWORD: vv8
      MONGO_HOST: localhost
      MONGO_PORT: 27018

      
volumes:
  vv8db: {}
  mongodb_data_container: {}
