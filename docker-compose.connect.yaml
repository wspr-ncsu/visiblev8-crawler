version: "3.9"
services:
  backend:
    restart: unless-stopped
    image: vv8_backend_api
    depends_on:
      - task_queue_broker
    build:
      context: ./backend
      dockerfile: Dockerfile
      network: host
    ports:
      - "4000:4000/tcp"
    environment:
      VV8_CELERY_BROKER: localhost
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_web_server
      SQL_USERNAME: ${SQL_USER}
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DATABASE: ${SQL_DB}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DB}
    network_mode: "host"
  task_queue_broker:
    restart: unless-stopped
    image: redis:6.2
    volumes:
      - ./redis_data:/data
    ports:
      - "6380:6379/tcp"
    network_mode: "host"
  # Celery Workers
  vv8_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
    ports:
      - "5901:5901/tcp"
      - "6901:6901/tcp"
    build:
      context: ./celery_workers
      dockerfile: vv8_worker.dockerfile
      network: host
    image: vv8_crawler_worker
    environment:
      VV8_CELERY_BROKER: localhost
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_worker
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-9}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
    volumes:
      - ./screenshots:/app/screenshots:rwx
      - ./har:/app/har:rwx
      - ./celery_workers/vv8_worker/vv8_crawler:/app/node:rwx
      - '/app/node/node_modules'
      - ./raw_logs:/app/vv8_worker/raw_logs:rwx
    network_mode: "host"
  log_parser_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
    build:
      context: ./celery_workers
      dockerfile: log_parser.dockerfile
      network: host
      args:
        DOCKER_IMAGE: visiblev8/vv8-postprocessors:latest
    image: vv8_log_parser_worker
    volumes:
      - ./raw_logs:/app/raw_logs:rwx
      - ./parsed_logs:/app/parsed_logs:rwx
    env_file:
      - .env
    environment:
      VV8_CELERY_BROKER: localhost
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_log_parser
      MONGODB_HOST: ${MONGO_HOST}
      MONGODB_PORT: ${MONGO_PORT}
      MONGODB_USER: ${MONGO_USER}
      MONGODB_PWD: ${MONGO_PASSWORD}
      MONGODB_AUTHDB: ${MONGO_DB}
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-9}
      PGHOST: ${SQL_HOST}
      PGPORT: ${SQL_PORT}
      PGUSER: ${SQL_USER}
      PGPASSWORD: ${SQL_PASSWORD}
      PGDATABASE: ${SQL_DATABASE}
      ADBLOCK_BINARY: /app/post-processors/adblock
      EASYPRIVACY_FILE: /app/post-processors/easyprivacy.txt
      EASYLIST_FILE: /app/post-processors/easylist.txt
      EMAP_FILE: /app/post-processors/entities.json
      IDLDATA_FILE: /artifacts/idldata.json
    network_mode: "host"
  flower:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
    image: vv8-vv8_crawler_flower_monitor
    build:
      context: ./flower
      dockerfile: Dockerfile
    volumes:
      - ./flower/data:/etc/db:rwx
    ports:
      - "5555:5555/tcp"
    network_mode: "host"
volumes:
  vv8postgresdb: {}