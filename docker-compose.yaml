version: "3.9"
services:
  backend:
    restart: unless-stopped
    image: vv8_backend_api
    depends_on:
      - task_queue_broker
      - database
      - mongodb
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000/tcp"
    volumes:
      - ./parsed_logs:/parsed_logs:r
      - ./screenshots:/screenshots:r
      - ./har:/har:r
      - ./raw_logs:/raw_logs:r
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_web_server
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
      SQL_USERNAME: vv8
      SQL_PASSWORD: vv8
      SQL_HOST: database
      SQL_PORT: 5432
      SQL_DATABASE: vv8_backend
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: vv8
      MONGO_PASSWORD: vv8
      MONGO_DATABASE: admin
  database:
    restart: unless-stopped
    image: vv8_postgres
    build:
      context: ./vv8_backend_database
      dockerfile: Dockerfile
    ports:
      - "5434:5432/tcp"
    environment:
      POSTGRES_PASSWORD: vv8
      POSTGRES_USER: vv8
      POSTGRES_DB: vv8_backend
      PGDATA: /var/lib/postgresql/data/pg_data
    volumes:
      - ./vv8db2:/var/lib/postgresql/data
  task_queue_broker:
    restart: unless-stopped
    image: redis:6.2
    volumes:
      - ./redis_data:/data
    ports:
      - "6380:6379/tcp"
  mongodb:
    image: 'mongo:6'
    environment:
      MONGO_INITDB_ROOT_USERNAME: vv8
      MONGO_INITDB_ROOT_PASSWORD: vv8
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/init/:/docker-entrypoint-initdb.d/:ro
  # Celery Workers
  vv8_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database
    build:
      context: ./celery_workers
      dockerfile: vv8_worker.dockerfile
    image: vv8_crawler_worker
    deploy:
      replicas: 7
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_worker
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: vv8
      MONGO_PASSWORD: vv8
      MONGO_DATABASE: admin
    volumes:
      - ./screenshots:/app/screenshots:rwx
      - ./har:/app/har:rwx
      - ./celery_workers/vv8_worker/vv8_crawler:/app/node:rwx
      - '/app/node/node_modules'
      - ./raw_logs:/app/vv8_worker/raw_logs:rwx
  log_parser_worker:
    restart: unless-stopped
    depends_on:
      - task_queue_broker
      - database
      - mongodb
    build:
      context: ./celery_workers
      dockerfile: log_parser.dockerfile
    image: vv8_log_parser_worker
    volumes:
      - ./raw_logs:/app/raw_logs:rwx
      - ./parsed_logs:/app/parsed_logs:rwx
      - ./celery_workers/log_parser_worker/idldata.json:/app/idldata.json:r
    deploy:
      replicas: 7
    environment:
      VV8_CELERY_BROKER: task_queue_broker
      VV8_CELERY_BROKER_PORT: 6379
      VV8_CELERY_ID: vv8_log_parser
      VV8_CELERY_BACKEND_USER: vv8
      VV8_CELERY_BACKEND_PASSWORD: vv8
      VV8_CELERY_BACKEND_HOST: database
      VV8_CELERY_BACKEND_PORT: 5432
      VV8_CELERY_BACKEND_DATABASE: celery_backend
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USER: vv8
      MONGODB_PWD: vv8
      MONGODB_AUTHDB: admin
      PGHOST: database
      PGPORT: 5432
      PGUSER: vv8
      PGPASSWORD: vv8
      PGDATABASE: vv8_backend

volumes:
  vv8postgresdb: {}

